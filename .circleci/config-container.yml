# --------------------------------
# Integration test for run-java.sh
# Using plain circle containers
# The default VM approach is more flexible as
# it allows to specify limits.
#
# This original configuration is kept as a reference,
# but is not active.
# --------------------------------

job_defaults: &job_defaults
  environment:
    JDK8_TAG: 8u151
    JDK9_TAG: 9.0.1-11

version: 2

jobs:
  # Create the Docker image used for running the tests
  # Two versions for Java 8 and Java 9
  test_runner_8:
    <<: *job_defaults
    
    docker:
     - image: docker:17.09.0-ce-git

    steps:
      - checkout
      - setup_remote_docker:
          version: 17.09.0-ce

      - restore_cache:
          key: docker-8-{{ checksum "test/docker/Dockerfile" }}-{{ checksum "test/docker/run_tests.sh" }}
          
      - run:
          name: Create and push builder image for Java 8
          working_directory: test/docker
          command: |
            if [ ! -f timestamp ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker build --build-arg JDK=${JDK8_TAG} -t fabric8/run-java-sh-test:${JDK8_TAG} .
              docker push fabric8/run-java-sh-test:${JDK8_TAG}
              docker tag fabric8/run-java-sh-test:${JDK8_TAG} fabric8/run-java-sh-test:openjdk8
              docker push fabric8/run-java-sh-test:openjdk8
              docker tag fabric8/run-java-sh-test:${JDK8_TAG} fabric8/run-java-sh-test:latest
              docker push fabric8/run-java-sh-test:latest              
              touch timestamp
            fi

      - save_cache:
          key: docker-8-{{ checksum "test/docker/Dockerfile" }}-{{ checksum "test/docker/run_tests.sh" }}
          paths: 
            - test/docker/timestamp
            
  test_runner_9:
    <<: *job_defaults

    docker:
      - image: docker:17.09.0-ce-git

    steps:
      - checkout

      - setup_remote_docker:
          version: 17.09.0-ce

      # Only build the docker image if not already build and pushed.
      # This is determined by the checksums of Dockerfile and run_tests.sh
      - restore_cache:
          key: docker-9-{{ checksum "test/docker/Dockerfile" }}-{{ checksum "test/docker/run_tests.sh" }}
          
      - run:
          name: Create and push builder image for Java 9
          working_directory: test/docker
          command: |
            if [ ! -f timestamp ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker build --build-arg JDK=${JDK9_TAG} -t fabric8/run-java-sh-test:${JDK9_TAG} .
              docker push fabric8/run-java-sh-test:${JDK9_TAG}
              docker tag fabric8/run-java-sh-test:${JDK9_TAG} fabric8/run-java-sh-test:openjdk9
              docker push fabric8/run-java-sh-test:openjdk9
              touch timestamp
            fi

      - save_cache:
          key: docker-9-{{ checksum "test/docker/Dockerfile" }}-{{ checksum "test/docker/run_tests.sh" }}
          paths: 
            - test/docker/timestamp
            
  # Run the integration test directly from the  container. Faster but less flexible
  # Parameterized with the Java version
  container_test_8:
    <<: *job_defaults

    docker:
      - image: fabric8/run-java-sh-test:${JDK8_TAG}

    steps:
      - checkout
             
      - run:
          name: Run tests for JDK 8
          environment:
            RUN_JAVA_DIR: .
            REPORT_DIR: reports/jdk8
          command: /opt/run_tests.sh

      - store_artifacts:
          path: reports/jdk8
          destination: jdk8

  container_test_9:
    <<: *job_defaults

    docker:
      - image: fabric8/run-java-sh-test:${JDK9_TAG}

    steps:
      - checkout
             
      - run:
          name: Run tests for JDK 9
          environment:
            RUN_JAVA_DIR: .
            REPORT_DIR: reports/jdk9
          command: /opt/run_tests.sh

      - store_artifacts:
          path: reports/jdk9
          destination: jdk9
      
# =======================================================
# Workflow for running all tests
workflows:
  version: 2
  
  # Run test directly in containers started by circle
  run_container_tests:
    jobs:
      - test_runner_8:
          filters:
            tags:
              only:
                /v[0-9]+(\.[0-9]+)*/
      - test_runner_9:
          filters:
            tags:
              only:
                /v[0-9]+(\.[0-9]+)*/
      - container_test_8:
          requires:
            - test_runner_8
          filters:
            tags:
              only:
                /v[0-9]+(\.[0-9]+)*/
      - container_test_9:
          requires:
            - test_runner_9
          filters:
            tags:
              only:
                /v[0-9]+(\.[0-9]+)*/
      
 
